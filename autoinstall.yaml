#cloud-config
autoinstall:
  version: 1

  # Pacotes adicionais para instalação
  packages:
    - ubuntu-desktop
    - build-essential
    - python3
    - python3-pip
    - nodejs
    - npm
    - nginx
    - docker.io
    - mysql-workbench
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - slack-desktop

  snaps:
    - name: code
      channel: stable
    - name: firefox
    - name: gnome-3-38-2004
    - name: gtk-common-themes
    - name: snap-store
    - name: snapd-desktop-integration

  identity:
    realname: ''
    username: ubuntu
    password: $6$rounds=4096$YrjVJEDZ/UuFk3MC$VZ0nUtE.HuBrYEVTo9KQZsZWf/OoNROdOaMtFKhZOb4UpctUoLEx7HpM7LTymG2lYOQ4GSOy5hrInDF7X5Wec0  # revpay2023
    hostname: ubuntu-dev

  storage:
    layout:
      name: custom
    config:
      - id: disk0
        type: disk
        match:
          size: largest
        ptable: gpt
        path: /dev/sda
        wipe: superblock
        preserve: false
        name: ''
        grub_device: true
        boot:
          - number: 1
            size: 512M
            flag: boot
        partitions:
          - number: 2
            size: 40G
            flag: ''
            filesystem: ext4
            mount:
              mount_point: /
          - number: 3
            size: 20G
            flag: ''
            filesystem: ext4
            mount:
              mount_point: /var
          - number: 4
            size: 5G
            flag: ''
            filesystem: ext4
            mount:
              mount_point: /etc
      - id: disk1
        type: disk
        match:
          size: largest
        ptable: gpt
        path: /dev/sdb
        wipe: superblock
        preserve: false
        name: ''
        grub_device: false
        partitions:
          - number: 1
            size: -1
            flag: ''
            filesystem: ext4
            mount:
              mount_point: /home

  early-commands:
    - echo 'linux-generic-hwe-22.04' > /run/kernel-meta-package

  late-commands:
    - >-
      curtin in-target --
      sed -i /etc/default/grub -e
      's/GRUB_CMDLINE_LINUX_DEFAULT=".*/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"/'
    - curtin in-target -- update-grub
    - rm /target/etc/netplan/00-installer-config*yaml
    - >-
      printf "network:\n  version: 2\n  renderer: NetworkManager"
      > /target/etc/netplan/01-network-manager-all.yaml
    - >-
      curtin in-target -- apt-get remove -y
      btrfs-progs cryptsetup* lvm2 xfsprogs
    - >-
      curtin in-target -- apt-get remove -y
      ubuntu-server ubuntu-server-minimal
      binutils byobu curl dmeventd finalrd gawk
      kpartx mdadm ncurses-term needrestart open-iscsi openssh-server
      sg3-utils ssh-import-id sssd thin-provisioning-tools vim tmux
      sosreport screen open-vm-tools motd-news-config lxd-agent-loader
      landscape-common htop git fonts-ubuntu-console ethtool
    - curtin in-target -- apt-get install -y cloud-init
    - curtin in-target -- apt-get autoremove -y
    - >-
      curtin in-target --
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    - >-
      curtin in-target --
      add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - >-
      curtin in-target -- apt-get update -y
    - >-
      curtin in-target -- apt-get install -y docker-ce
    - >-
      curtin in-target -- bash -c "curl -fsSL https://sdk.cloud.google.com | bash"
    - >-
      curtin in-target -- curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - >-
      curtin in-target -- unzip awscliv2.zip
    - >-
      curtin in-target -- ./aws/install
    - >-
      curtin in-target -- curl -fsSL https://get.pulumi.com | sh
    - >-
      curtin in-target -- wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - >-
      curtin in-target -- sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    - >-
      curtin in-target -- apt-get update -y
    - >-
      curtin in-target -- apt-get install -y google-chrome-stable

  user-data:
    disable_root: false
    ssh:
      install-server: true
      allow-pw: true
      disable_root: false
